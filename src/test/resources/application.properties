# Let Spring autodetect the different SQL Dialects of each datasource
spring.jpa.database=default
# Generate the DB schema in the In-Memory H2 databases based on the JPA Entities
spring.jpa.generate-ddl=true

# H2 In-Memory Database "foo" (used in tests instead of a real PostgreSQL DB)
spring.datasource.url=jdbc:h2:mem:foo;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# H2 In-Memory Database "bar" (used in tests instead of a real PostgreSQL DB)
bar.datasource.url=jdbc:h2:mem:bar;DB_CLOSE_ON_EXIT=FALSE
bar.datasource.username=sa
bar.datasource.password=
bar.datasource.driver-class-name=org.h2.Driver

mysportsfeeds.username=quadglacier
mysportsfeeds.password=T3stP@ssw0rd

spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true

#show sql statement
logging.level.org.hibernate.SQL=debug

#show sql values
logging.level.org.hibernate.type.descriptor.sql=trace

security.oauth2.resource.filter-order=3

security.signing-key=test
security.encoding-strength=256
security.keystore-pass=p@ssw0rd
security.security-realm=Pickem Security Realm

security.jwt.client-id=1b2dfab081098556f73039459c53b37f
security.jwt.client-secret=20a9add1d496051bf5f58b980a5a7799b3a71cf8302a375068d12e779414e28d
security.jwt.grant-type=password
security.jwt.scope-read=read
security.jwt.scope-write=write
security.jwt.resource-ids=testjwtresourceid

sendwithus.api-key=TESTAPIKEY
sendwithus.base-url=https://api.sendwithus.com/api/v1

mysportsfeeds.url.base=https://api.mysportsfeeds.com
mysportsfeeds.version.current=v1.2
mysportsfeeds.format=json